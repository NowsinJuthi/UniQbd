/my-project
  /client        ← React frontend
  /server        ← Express backend

cd client
npm create vite@latest 

cd ../server
npm init -y
npm i express mongoose cors helmet hpp xss-clean express-rate-limit dotenv express-mongo-sanitize cookie-parser
npm i -D nodemon
mkdir -p src/{routes,controllers,services,models,middlewars,utils,config,}

model->controller->service->model 

"dev": "nodemon index.js",

<script src="https://cdn.tailwindcss.com"></script>

green: { DEFAULT: "#11ae68" },
website: { DEFAULT: "#031b23" },
website: { DEFAULT: "# --background-imgbg: linear-gradient(-60deg,
            rgba(11, 36, 65, 1) 0%,
            rgba(42, 73, 108, 1) 0%,
            rgba(11, 36, 65, 1) 70%);" },
website1: { DEFAULT: "#02161c" },
blackColor3: { DEFAULT: "#01222c"},
cart: { DEFAULT: "#031a21" },
websitefont: { DEFAULT: "rgba(255, 255, 255, .6)" },
navbar: { DEFAULT: "#d1fbe9" },



 style={{
        backgroundImage: `url(${product.bgimg || "/images/bg.jpg"})`,
      }}


      


/* --background-imgbg: linear-gradient(-60deg,
            rgba(11, 36, 65, 1) 0%,
            rgba(42, 73, 108, 1) 0%,
            rgba(11, 36, 65, 1) 70%); */


--color-gradient: radial-gradient(at 50% 75%,
            rgba(37, 82, 79, 0.5),
            rgba(6, 48, 62, 0.8),
            rgba(17, 174, 104, 0.4));
}

.bg-gradient {
    background: var(--color-gradient);
}

bg-radial-[at_50%_75%] 
       from-[#25524ffb]/50 via-bgtransparent/80 to-website/40


 style={{ backgroundImage: `url('/images/j.jpg')` }}

     /* --background-background: rgba(0, 0, 0, .3); */
       /* --background-button: rgba(0, 0, 0, .25); */



        /* --background-button: linear-gradient(to right, rgb(0, 222, 222), rgb(0, 102, 255)); */



        @import "tailwindcss";

@theme {
    --color-border: rgb(124, 147, 173, 0.5);
    --background-imgbg: linear-gradient(-60deg,
            rgba(11, 36, 65, 1) 0%,
            rgba(42, 73, 108, 1) 0%,
            rgba(11, 36, 65, 1) 70%);
    --color-box: #344E7180;
    
    --color-boxbg: #1e2f44;
    --color-button: #1e2f44;
    --color-imgbg: #fff;
    --background-nav: linear-gradient(5deg,
            rgba(11, 36, 64, .95) 0%,
            rgba(42, 73, 108, 1) 100%,
            rgba(11, 36, 64, .05) 100%);
    --color-footer: #fdd663;
    
}



.bg-nav {
    background-image: var(--background-nav);
}



 {/* Sidebar Filters */}
          <div className="h-screen md:col-span-3 bg-boxbg border
           border-gray-800 backdrop-blur-xl rounded-2xlsticky top-6">
           
            <h3 className="text-emerald-400 text-xl font-semibold mb-3">
              🎯 Filter by Category
            </h3>
            <div className="flex flex-col gap-2 mb-8 p-5">
              {categories.map((c) => (
                <Checkbox
                  key={c._id}
                  checked={selectedCategories.includes(c._id)}
                  onChange={() => handleCategoryChange(c._id)}
                  className="text-white"
                  style={{
                    border: "1px solid #374151",
                    borderRadius: "8px",
                    padding: "6px 10px",
                    background: selectedCategories.includes(c._id)
                      ? "rgba(16,185,129,0.3)"
                      : "transparent",
                  }}
                >
                  <p className="text-white">{c.name}</p>
                </Checkbox>
              ))}
            </div>

            Price Filter
            <h3 className="text-emerald-400 text-xl font-semibold mb-5 ml-8 ">
              💰 Filter by Price
            </h3>
            <div className="mb-6 px-5">
              <Range
                values={priceRange}
                step={STEP}
                min={MIN}
                max={MAX}
                onChange={(values) => setPriceRange(values)}
                renderTrack={({ props, children }) => (
                  <div
                    {...props}
                    style={{
                      ...props.style,
                      height: "6px",
                      width: "100%",
                      background: `linear-gradient(to right, #10B981 ${
                        ((priceRange[0] - MIN) / (MAX - MIN)) * 100
                      }%, #10B981 ${
                        ((priceRange[1] - MIN) / (MAX - MIN)) * 100
                      }%, #374151 ${
                        ((priceRange[1] - MIN) / (MAX - MIN)) * 100
                      }%)`,
                      borderRadius: "4px",
                    }}
                  >
                    {children}
                  </div>
                )}
                renderThumb={({ props, index }) => (
                  <div
                    {...props}
                    style={{
                      ...props.style,
                      height: "20px",
                      width: "20px",
                      borderRadius: "50%",
                      backgroundColor: "#10B981",
                      boxShadow: "0 0 5px #10B981",
                    }}
                  >
                    <div
                      style={{
                        position: "absolute",
                        top: "-30px",
                        color: "#fff",
                        fontSize: "12px",
                        backgroundColor: "#10B981",
                        padding: "2px 6px",
                        borderRadius: "4px",
                      }}
                    >
                      {priceRange[index]} TK
                    </div>
                  </div>
                )}
              />
            </div>

            <div className="text-center text-sm text-gray-400 mb-6 ">
              Selected Range:{" "}
              <span className="text-emerald-400 font-semibold">
                {priceRange[0]} TK – {priceRange[1]} TK
              </span>
            </div>

            <Button
              onClick={resetFilters}
              type="primary"
              danger
              className="w-full rounded-lg bg-red-600 hover:bg-red-700"
            >
              Reset Filters
            </Button>
          </div>